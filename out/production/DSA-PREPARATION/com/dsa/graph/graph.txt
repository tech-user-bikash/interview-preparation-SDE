BFS and DFS traversal.
BFS - level wise traversal
- Don't temper the given data. make a copy of it to work.
- create adjacency list to store the neighbours of each vertex.

- for visiting 4 diff direction follow the below technique.
Up = (row - 1, col)
Right = (row, col + 1)
Down = (row + 1, col)
Left = (row, col - 1)

int[] deltaRow = {-1, 0, +1, 0}
int[] deltaCol = {0, +1, 0, -1}

- for visiting 8 different direction follow the below technique. It may be used for BFS traversal.
up = (row - 1, col - 1) (row - 1, col) (row - 1, col + 1)
same = (row, col - 1) (row, col) (row, col + 1)
down = (row + 1, col - 1) (row + 1, col) (row - 1, col + 1)

n = no. of rows for given grid
m = no. of col for given grid

- Here row and col is varying between -1, 0 and +1.
for(int deltaRow = -1; deltaRow <= 1; deltaRow++){
    for(int deltaCol = -1; deltaCol <= 1; deltaCol++){
        int neighbourRow = row + deltaRow;
        int neighbourCol = col + deltaCol;
        // neighbour row & col should valid
        if(neighbourRow >= 0 && neighbourRow < n && neighbourCol >=0 && neighbourRow < m && ... other conditions){
         add into queue.
        }
    }
}